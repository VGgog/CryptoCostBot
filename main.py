import telebot
import requests
from bs4 import BeautifulSoup
from telebot import types

bot = telebot.TeleBot('TOKEN') 

headers = {'User agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'}

x = 0


def the_cost_cripto(link, headers = headers):
	"""–í—ã–¥–∞—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –≤ —Ä—É–±–ª—è—Ö"""
	full_page = requests.get(link, headers=headers)
	soup = BeautifulSoup(full_page.text, "lxml")
	convert = soup.find("div", "crypto_curr_val")
	convert = convert.text
	convert = convert[1 : ]
	return convert


def inline_keyboard(message):
	"""–°–æ–∑–¥–∞—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ—Ç –∫ –Ω–µ–º—É Inline-Keyboard"""
	markup = types.InlineKeyboardMarkup()
	btn_btc = types.InlineKeyboardButton('Bitcoin', callback_data='BTC')
	btn_eth = types.InlineKeyboardButton('Ethereum', callback_data='ETH')
	btn_ltc = types.InlineKeyboardButton('Litecoin', callback_data='LTC')
	btn_mnr = types.InlineKeyboardButton('Monero', callback_data='MNR')
	btn_eth_classic = types.InlineKeyboardButton('Ethereum classic', callback_data='ETH_CLASSIC')
	markup.add(btn_btc)
	markup.add(btn_eth)
	markup.add(btn_ltc)
	markup.add(btn_mnr)
	markup.add(btn_eth_classic)
	bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É, —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç: ', reply_markup=markup)


@bot.message_handler(content_types = ['text'])
def bot_say(message):
	# –°–æ–∑–¥–∞—ë—Ç –¥–≤–µ –æ–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ 
	markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
	butten_one = types.KeyboardButton('–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã')
	butten_two = types.KeyboardButton('ü§ñ –û –±–æ—Ç–µ ü§ñ')
	markup.add(butten_one, butten_two)
	global x

	if message.text == '/start':
		"""–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±–æ—Ç–∞."""
		greeting = '''
–ë–æ—Ç crypto —Ä–∞–¥ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∞—Å!
–Ø —É–º–µ—é —É–∑–Ω–∞–≤–∞—Ç—å –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤–∞–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é —Ü–µ–Ω—É 5 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.
–¶–µ–Ω—ã –±—É–¥—É—Ç –≤ —Ä—É–±–ª—è—Ö –∏ –¥–æ–ª–ª–∞—Ä–∞—Ö.
–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ /help –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û –±–æ—Ç–µ".
'''
		bot.send_message(message.chat.id, greeting, reply_markup=markup)

	elif message.text == '–£–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã':
		x = 1
		inline_keyboard(message)

	elif message.text == 'ü§ñ –û –±–æ—Ç–µ ü§ñ' or message.text == '/help':
		help_message = '''
–ï—Å–ª–∏ –≤—ã —á–∏—Ç–∞–µ—Ç–µ —ç—Ç–æ, –∑–Ω–∞—á–∏—Ç –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —É–∑–Ω–∞—Ç—å –æ–±–æ –º–Ω–µ.
–Ø —Å–æ–∑–¥–∞–Ω –≤ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö, –ø—Ä–æ—Å—Ç–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ-–∂–µ —ç—Ç–æ —Ç–∞–∫–æ–µ, –≤–∞—à–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ.
–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –Ω–æ –ø–æ–Ω–∏–º–∞—é –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏.
–ù–∞–ø–∏—Å–∞–Ω –Ω–∞ —è–∑—ã–∫–µ Python, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Telebot.
–î–∞–Ω–Ω—ã–µ —è –±–µ—Ä—É —Å —Å–∞–π—Ç–∞ myfin.ru.
–ï—â—ë —Ä–∞–∑ —Å–∫–∞–∂—É, –±–æ—Ç —Å–æ–∑–¥–∞–Ω –≤ –æ–∑–Ω–∞–∫–æ–º–∏—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª—è—Ö, –∞ –∑–Ω–∞—á–∏—Ç —Å –Ω–∏–º –≤—ã –º–æ–∂–µ—Ç–µ –ª–∏—à—å –ø–æ–∏–≥—Ä–∞—Ç—å, –∞ –Ω–∏ –∫–∞–∫ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥–µ.
–ù—É —á—Ç–æ-–∂–µ, –æ–±–æ –≤—Å—ë–º —è –≤–∞—Å –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª, —Ç–∞–∫ —á—Ç–æ —Ä–∞–∑–≤–ª–µ–∫–∞–π—Ç–µ—Å—å.
		'''
		if x:
			bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id - 1, text='ü§ñ –û –±–æ—Ç–µ ü§ñ', reply_markup=None)
			bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id - 1, text='/help', reply_markup=None)
		bot.send_message(message.chat.id, help_message, reply_markup=markup)
		x = 0
	else: 
		bot.send_message(message.chat.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é.\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û –ë–æ—Ç–µ"\
			–∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –±–æ—Ç—É.', reply_markup=markup)
		if x:
			bot.edit_message_reply_markup(message.chat.id, message_id = message.message_id-1, reply_markup = '')
			x = 0


@bot.callback_query_handler(func=lambda call: True)
def clicke_inline_butten(call):
	if call.message:
		global x
		x = 0
		if call.data == 'BTC':
			bit_cost_rub = the_cost_cripto(link = 'https://mainfin.ru/crypto/bitcoin-rub')
			bit_cost_dol = the_cost_cripto(link = 'https://mainfin.ru/crypto/bitcoin')
			bit_cost_dol = bit_cost_dol[ : len(bit_cost_dol) - 2]
			crypto_value_message = 'Bitcoin –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç: \n\n' + bit_cost_rub + ' –†—É–±\n' + '–∏–ª–∏\n' + bit_cost_dol + ' –î–æ–ª–ª–∞—Ä–æ–≤'
			bot.send_message(call.message.chat.id, crypto_value_message)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="Bitcoin", reply_markup=None)
		
		elif call.data == 'ETH':
			eth_cost_rub = the_cost_cripto(link = 'https://mainfin.ru/crypto/1-ethereum-rub')
			eth_cost_dol = the_cost_cripto(link = 'https://mainfin.ru/crypto/ethereum')
			eth_cost_dol = eth_cost_dol[ : len(eth_cost_dol) - 2]
			crypto_value_message = 'Ethereum –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç: \n\n' + eth_cost_rub + ' –†—É–±\n' + '–∏–ª–∏\n'  + eth_cost_dol + ' –î–æ–ª–ª–∞—Ä–æ–≤'
			bot.send_message(call.message.chat.id, crypto_value_message)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="Ethereum", reply_markup=None)
		
		elif call.data == 'LTC':
			lit_cost_rub = the_cost_cripto(link = 'https://mainfin.ru/crypto/litecoin-rub')
			lit_cost_dol = the_cost_cripto(link = 'https://mainfin.ru/crypto/litecoin')
			lit_cost_dol = lit_cost_dol[ : len(lit_cost_dol) - 2]
			crypto_value_message = 'Litecoin –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç: \n\n' + lit_cost_rub + ' –†—É–±\n' + '–∏–ª–∏\n'  + lit_cost_dol + ' –î–æ–ª–ª–∞—Ä–æ–≤'
			bot.send_message(call.message.chat.id, crypto_value_message)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="Litecoin", reply_markup=None)
		
		elif call.data == 'MNR':
			mnr_cost_rub = the_cost_cripto(link = 'https://mainfin.ru/crypto/monero-rub')
			mnr_cost_dol = the_cost_cripto(link = 'https://mainfin.ru/crypto/monero')
			mnr_cost_dol = mnr_cost_dol[ : len(mnr_cost_dol) - 2]
			crypto_value_message = 'Monero –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç: \n\n' + mnr_cost_rub + ' –†—É–±\n' + '–∏–ª–∏\n'  + mnr_cost_dol + ' –î–æ–ª–ª–∞—Ä–æ–≤'			
			bot.send_message(call.message.chat.id, crypto_value_message)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="Monero", reply_markup=None)
		
		elif call.data == 'ETH_CLASSIC':
			eth_clas_cost_rub = the_cost_cripto(link = 'https://mainfin.ru/crypto/1-ethereumclassic-rub')
			eth_clas_cost_dol = the_cost_cripto(link = 'https://mainfin.ru/crypto/ethereumclassic')
			eth_clas_cost_dol = eth_clas_cost_dol[ : len(eth_clas_cost_dol)]
			crypto_value_message = 'Ethereum classic–Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç: \n\n' + eth_clas_cost_rub + ' –†—É–±\n' + '–∏–ª–∏\n'  + eth_clas_cost_dol + ' –î–æ–ª–ª–∞—Ä–æ–≤'
			bot.send_message(call.message.chat.id, crypto_value_message)
			bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="Ethereum classic", reply_markup=None)


bot.polling()